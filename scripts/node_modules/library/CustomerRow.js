/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const ImageView = require('sf-core/ui/imageview');
const Image = require('sf-core/ui/image');
const ImageFillType = require('sf-core/ui/imagefilltype');
const Label = require('sf-core/ui/label');
const Font = require('sf-core/ui/font');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const CustomerRow = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const flInteriorStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: null,
			left: 24.5,
			right: 24.5,
			top: 14.57,
			bottom: 0,
			id: 152,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});  
		var flInterior = new FlexLayout(flInteriorStyle);  
		this.addChild(flInterior);
			
		const customerRowLineStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: 1,
			left: 1.37,
			bottom: 1.82,
			right: 0.46,
			backgroundColor: Color.create(255, 95, 198, 144),
			id: 160,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});  
		var customerRowLine = new FlexLayout(customerRowLineStyle);  
		flInterior.addChild(customerRowLine);
		this.customerRowLine = customerRowLine;
	
		const imgCustomerPictureStyle = getCombinedStyle(".imageView", {
			height: 59,
			width: 59,
			borderRadius: 29.5,
			borderColor: Color.create(255, 91, 198, 149),
			borderWidth: 0.5,
			image: Image.createFromFile("images://customers_1.png"),
			top: 3.93,
			left: 0,
			imageFillType: ImageFillType.ASPECTFIT,
			id: 159,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});  
		var imgCustomerPicture = new ImageView(imgCustomerPictureStyle);  
		flInterior.addChild(imgCustomerPicture);
		this.imgCustomerPicture = imgCustomerPicture;
	
		const flCustomerDataStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: null,
			bottom: 0,
			top: 0,
			backgroundColor: Color.create(0, 255, 255, 255),
			left: 72,
			right: 0,
			id: 153,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});  
		var flCustomerData = new FlexLayout(flCustomerDataStyle);  
		flInterior.addChild(flCustomerData);
			
		const lblCustomerRowNameStyle = getCombinedStyle(".label", {
			height: 24,
			left: 0,
			right: 0,
			width: null,
			textColor: Color.create(255, 74, 74, 74),
			text: "Adam Stewart",
			id: 158,
			font: Font.create("Arial", 20, Font.NORMAL)
		});  
		var lblCustomerRowName = new Label(lblCustomerRowNameStyle);  
		if(lblCustomerRowNameStyle.scrollEnabled === false)
			lblCustomerRowName.ios && (lblCustomerRowName.ios.scrollEnabled = false);
		flCustomerData.addChild(lblCustomerRowName);
		this.lblCustomerRowName = lblCustomerRowName;
	
		const flCustomerRowEmailStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: 20,
			marginTop: 10,
			id: 156,
			flexDirection: FlexLayout.FlexDirection.ROW
		});  
		var flCustomerRowEmail = new FlexLayout(flCustomerRowEmailStyle);  
		flCustomerData.addChild(flCustomerRowEmail);
			
		const flCustomerRowPhoneStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: 20,
			marginTop: 10,
			id: 154,
			flexDirection: FlexLayout.FlexDirection.ROW
		});  
		var flCustomerRowPhone = new FlexLayout(flCustomerRowPhoneStyle);  
		flCustomerData.addChild(flCustomerRowPhone);
			
		const imgCustomerRowPhoneStyle = getCombinedStyle(".imageView", {
			image: Image.createFromFile("images://customers_phone.png"),
			width: 20,
			height: null,
			id: 161
		});  
		var imgCustomerRowPhone = new ImageView(imgCustomerRowPhoneStyle);  
		flCustomerRowPhone.addChild(imgCustomerRowPhone);
			
		const imgCustomerRowEmailStyle = getCombinedStyle(".imageView", {
			image: Image.createFromFile("images://customers_email.png"),
			width: 20,
			height: null,
			id: 162
		});  
		var imgCustomerRowEmail = new ImageView(imgCustomerRowEmailStyle);  
		flCustomerRowEmail.addChild(imgCustomerRowEmail);
			
		const lblCustomerRowEmailStyle = getCombinedStyle(".label", {
			height: null,
			width: null,
			left: 8,
			text: "adam.stewart@customerservices.com",
			textColor: Color.create(255, 74, 74, 74),
			alpha: 0.54,
			id: 157,
			flexGrow: 1,
			font: Font.create("Lato", 13, Font.NORMAL)
		});  
		var lblCustomerRowEmail = new Label(lblCustomerRowEmailStyle);  
		if(lblCustomerRowEmailStyle.scrollEnabled === false)
			lblCustomerRowEmail.ios && (lblCustomerRowEmail.ios.scrollEnabled = false);
		flCustomerRowEmail.addChild(lblCustomerRowEmail);
		this.lblCustomerRowEmail = lblCustomerRowEmail;
	
		const lblCustomerRowPhoneStyle = getCombinedStyle(".label", {
			height: null,
			width: null,
			left: 8,
			text: "90 533 634 2312",
			textColor: Color.create(255, 74, 74, 74),
			id: 155,
			flexGrow: 1,
			font: Font.create("Lato", 13, Font.NORMAL)
		});  
		var lblCustomerRowPhone = new Label(lblCustomerRowPhoneStyle);  
		if(lblCustomerRowPhoneStyle.scrollEnabled === false)
			lblCustomerRowPhone.ios && (lblCustomerRowPhone.ios.scrollEnabled = false);
		flCustomerRowPhone.addChild(lblCustomerRowPhone);
		this.lblCustomerRowPhone = lblCustomerRowPhone;
	
		//assign the children to customerRow 
		this.children = Object.assign({}, {
			flInterior: flInterior
		});
		
		//assign the children of flInterior
		flInterior.children = Object.assign({}, {
			customerRowLine: customerRowLine,
			imgCustomerPicture: imgCustomerPicture,
			flCustomerData: flCustomerData
		});
		
		//assign the children of flCustomerData
		flCustomerData.children = Object.assign({}, {
			lblCustomerRowName: lblCustomerRowName,
			flCustomerRowEmail: flCustomerRowEmail,
			flCustomerRowPhone: flCustomerRowPhone
		});
		
		//assign the children of flCustomerRowEmail
		flCustomerRowEmail.children = Object.assign({}, {
			imgCustomerRowEmail: imgCustomerRowEmail,
			lblCustomerRowEmail: lblCustomerRowEmail
		});
		
		//assign the children of flCustomerRowPhone
		flCustomerRowPhone.children = Object.assign({}, {
			imgCustomerRowPhone: imgCustomerRowPhone,
			lblCustomerRowPhone: lblCustomerRowPhone
		});
		
	});

CustomerRow.defaults = getCombinedStyle(".flexLayout", {
	width: null,
	height: 106.43000000000002,
	flexDirection: FlexLayout.FlexDirection.ROW
});

module && (module.exports = CustomerRow);