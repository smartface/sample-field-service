/* 
		WARNING 
		Auto generated file. 
		Do not modify its contents.
*/

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Label = require('sf-core/ui/label');
const Font = require('sf-core/ui/font');
const TextAlignment = require('sf-core/ui/textalignment');
const Button = require('sf-core/ui/button');
const ImageView = require('sf-core/ui/imageview');
const Image = require('sf-core/ui/image');



const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const CustomerActionRow = extend(FlexLayout)(
	//constructor
	function(_super, props) {
		// initalizes super class for this component scope
		_super(this, props);

		const lblActionNameStyle = getCombinedStyle(".label", {
			width: null,
			height: null,
			text: "Notes",
			backgroundColor: Color.create(0, 208, 2, 27),
			textColor: Color.create(255, 29, 29, 38),
			flexGrow: 1,
			font: Font.create("Lato", 14, Font.NORMAL)
		});  
		var lblActionName = new Label(lblActionNameStyle);  
		if(lblActionNameStyle.scrollEnabled === false)
			lblActionName.ios && (lblActionName.ios.scrollEnabled = false);
		this.addChild(lblActionName);
		this.lblActionName = lblActionName;
	
		const lblCountStyle = getCombinedStyle(".label", {
			height: null,
			width: 30,
			text: null,
			marginRight: 11,
			textColor: Color.create(204, 29, 29, 38),
			textAlignment: TextAlignment.MIDCENTER,
			font: Font.create("Lato", 14, Font.NORMAL)
		});  
		var lblCount = new Label(lblCountStyle);  
		if(lblCountStyle.scrollEnabled === false)
			lblCount.ios && (lblCount.ios.scrollEnabled = false);
		this.addChild(lblCount);
		this.lblCount = lblCount;
	
		const flActionNextStyle = getCombinedStyle(".flexLayout", {
			top: 0,
			bottom: 0,
			height: null,
			right: 8.5,
			width: 8.5,
			backgroundColor: Color.create(0, 144, 19, 254),
			left: null,
			alignItems: FlexLayout.AlignItems.CENTER,
			justifyContent: FlexLayout.JustifyContent.CENTER
		});  
		var flActionNext = new FlexLayout(flActionNextStyle);  
		this.addChild(flActionNext);
			
		const flCustomerActionLineStyle = getCombinedStyle(".flexLayout", {
			width: null,
			height: 0.5,
			backgroundColor: Color.create(255, 95, 198, 144),
			bottom: 0,
			left: 0,
			right: 0,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});  
		var flCustomerActionLine = new FlexLayout(flCustomerActionLineStyle);  
		this.addChild(flCustomerActionLine);
		this.flCustomerActionLine = flCustomerActionLine;
	
		const btnActionStyle = getCombinedStyle(".button", {
			width: null,
			height: null,
			left: 0,
			top: 0,
			right: 0,
			bottom: 0,
			backgroundColor: Color.create(0, 0, 161, 241),
			text: null,
			positionType: FlexLayout.PositionType.ABSOLUTE
		});  
		var btnAction = new Button(btnActionStyle);  
		this.addChild(btnAction);
		this.btnAction = btnAction;
	
		const imgActionNextStyle = getCombinedStyle(".imageView", {
			width: 8.5,
			height: 13.91,
			image: Image.createFromFile("images://next_page.png")
		});  
		var imgActionNext = new ImageView(imgActionNextStyle);  
		flActionNext.addChild(imgActionNext);
			
		//assign the children to customerActionRow 
		this.children = Object.assign({}, {
			lblActionName: lblActionName,
			lblCount: lblCount,
			flActionNext: flActionNext,
			flCustomerActionLine: flCustomerActionLine,
			btnAction: btnAction
		});
		
		//assign the children of flActionNext
		flActionNext.children = Object.assign({}, {
			imgActionNext: imgActionNext
		});
		
	});

CustomerActionRow.defaults = getCombinedStyle(".flexLayout", {
	width: null,
	height: 60,
	backgroundColor: Color.create(255, 255, 255, 255),
	flexDirection: FlexLayout.FlexDirection.ROW
});

module && (module.exports = CustomerActionRow);